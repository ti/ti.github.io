{"catalog":"projects","date":"2017-03-04T00:00:00Z","github":"https://github.com/ti/mdrest","html":"\u003cp\u003e从Markdown建站，几乎成了整个技术圈博客标配，但是Markdown的技术存在很多限制，搜索下目前Markdown博客引擎你会发现，所有的博客引擎定制化不是很高，并且目前很多很流行的博客引擎都不太完善。目前流行的Markdown引擎如下，这些东西缺点显而易见。\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"/项目/mdrest_img/流行的markdown引擎.png\" alt=\"流行的markdown引擎\" title=\"流行的markdown引擎\"/\u003e\u003cdiv class=\"caption\"\u003e流行的markdown引擎\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e对于一个技术流而言，这些博客可拓展性太差，对于一个非技术流而言，操作太复杂。一直想写一个restful风格的Markdown引擎，一个偶然的机会，工作中需要改版开发者中心的文档系统，于是一个\u003ccode\u003erestful\u003c/code\u003e风格的Markdown引擎就应运而生了，耗时：5天。这比我想象的时间少了很多，于是就将其作为一个库进行开源。\u003c/p\u003e\n\n\u003cp\u003eGithub地址：\u003ca href=\"https://github.com/ti/mdrest\"\u003ehttps://github.com/ti/mdrest\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e最终展示效果：\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e博客： \u003ca href=\"http://nanxi.li\"\u003ehttp://nanxi.li\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e文档中心：\u003ca href=\"http://accounts.cug.edu.cn/apps/docs.html\"\u003ehttp://accounts.cug.edu.cn/apps/docs.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e先上几张图，说明Markown最终效果，当然，如果你是在我的博客中阅读这篇文章的话，博客本身就是最好的效果展示。\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"/项目/mdrest_img/phone_view.jpg\" alt=\"博客截图_手机端\" title=\"自适应对手机端效果图\"/\u003e\u003cdiv class=\"caption\"\u003e自适应对手机端效果图\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"/项目/mdrest_img/博客截图_主页.png\" alt=\"博客截图_主页\" title=\"主页\"/\u003e\u003cdiv class=\"caption\"\u003e主页\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"/项目/mdrest_img/博客截图_搜索.png\" alt=\"博客截图_搜索\" title=\"全文搜索\"/\u003e\u003cdiv class=\"caption\"\u003e全文搜索\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"/项目/mdrest_img/博客截图_文章页.png\" alt=\"博客截图_标签\" title=\"正文排版\"/\u003e\u003cdiv class=\"caption\"\u003e正文排版\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"/项目/mdrest_img/博客截图_标签.png\" alt=\"博客截图_自适应\" title=\"标签页面\"/\u003e\u003cdiv class=\"caption\"\u003e标签页面\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eMdRest 本身不做博客，它只是数据生成器。你无需对现有的md文件做任何更改，就可以轻松地将她们转换为可索引，结构化，免服务器，低成本的json数据。md文档的数据化，给前端展示带来无限可能，它可以是文档中心，可能是普通博文，也可能是录音，视频，相册，将数据与展示解绑才能更多可能。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"特性\"\u003e特性\u003c/h2\u003e\n\n\u003ch3 id=\"1-自由的目录结构和文章内容\"\u003e1. 自由的目录结构和文章内容\u003c/h3\u003e\n\n\u003cp\u003e自由的目录结构，你的博客目录可以是这个样子，所有的目录安排，图片资源摆放，完全可以按照你自己的喜好和规则，无需按照特定的约束进行。markdown rest引擎会将所有图片资源转换为以根目录为主目录绝对路径。也意味着，如果你的文章在git中浏览是正常的，那在博客中也会是正常的，无需对文章做转换。\u003c/p\u003e\n\n\u003cp\u003e目录结构\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esample_docs                           \n├── Simple Article.md                 \n├── YAML Article.md                   \n├── _DraftArticle.md                  \n├── first dir                         \n│   ├── Hello word.md                 \n│   └── img                           \n│       └── logo.png                  \n└── second\\ dir                       \n    └── Hello\\ word.md                \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e文档结构：\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e# Hello world\n这篇文章会自动识别文章标题，自动截取文章简介，自动转换图片相对流经。\n![img1](../folder2/hello.png)\n![img2](folder2/hello.png)\n查看关联的其他文章,\n[other reference markdown](../folder2/reference.md)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"2-智能的文档属性\"\u003e2. 智能的文档属性\u003c/h3\u003e\n\n\u003cp\u003e如果你用过其他的博客引擎，可能会要求你的博客是下面这个样子的。\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e---\ntitle: Hello world\nauthor: leenanxi\ncatalog: blog\ntags: [tag1, tag2]\ndate: 2016-12-29\ndraft: true\n---\n# Hello world\nThis is content\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eMdrest对Markdown的格式没有要求，你的文章可以是下面这个样子。文章的标题，创建日期，catalog 都可以自动生成。标题生成的的优先级是：yaml -\u0026gt; 第一个# -\u0026gt; 文件名。 草稿文章标题可以是 _filename.md\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e# Hello world\nThis is content\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"3-自由的json输出\"\u003e3. 自由的JSON输出\u003c/h3\u003e\n\n\u003cp\u003eMdRest支持任何格式的Yaml标签，它会将您的Ymal标签转换为JSON，例如您的文章可以是下面这个样子的。大多数使用markdown博客引擎主题的时候会使用html和js修改主题的很多功能，mdrest给开发者最大的修改自由，允许完全自由的输出格式。\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e---\nvideo: /videos/hello_word.mp4\nmedias: [video1.mp4, video2.mp4,pic1.jpg]\nother1: \nname: \u0026quot;name\u0026quot;\nx1: [3, 4]\n---\n# Hello world\nThis is content\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"4-拓展markdown渲染-模仿简书\"\u003e4. 拓展Markdown渲染 （模仿简书）\u003c/h3\u003e\n\n\u003cp\u003e我们的博客中图片难免需要插入图片标注，之前很多人的做法是给图片下面添加一个段落或块引用来进行，其实Markdown原生支持 \u003ccode\u003e![img](path.png \u0026quot;title\u0026quot;)\u003c/code\u003e 这样的形式，mdrest会自动将title作为题注，进行html渲染，当然，您可以在markdown中使用html进行更复杂的操作。\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e# Hello world\n![无印良品](../imgs/wulinliangpin.png \u0026quot;无印良品LOGO\u0026quot;)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"/项目/mdrest_img/博客截图_图注.png\" alt=\"博客截图_图注\"/\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch3 id=\"5-极简的前端组件\"\u003e5. 极简的前端组件。\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e不使用jQuery\u003c/li\u003e\n\u003cli\u003e不使用任何JS框架\u003c/li\u003e\n\u003cli\u003e纯粹的html5开发\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e目前的博客前端完全模仿angularjs的路由和API风格，但是整体架构却使用原生JS自行编写，因此体积很小，前端所有的业务逻辑JS和框架JS加起来只有：83.1 KB， 作为对比，流行的框架体积如下，可以看到应用的全部代码都比任何一个js库小。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLibrary/Framework\u003c/th\u003e\n\u003cth\u003esize (min)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003ejQuery 3.2\u003c/td\u003e\n\u003ctd\u003e86kb\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eReact\u003c/td\u003e\n\u003ctd\u003e147kb/**\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eAngular 1\u003c/td\u003e\n\u003ctd\u003e159kb/235kb\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003ePolymer\u003c/td\u003e\n\u003ctd\u003e222kb/302kb\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eAurelia\u003c/td\u003e\n\u003ctd\u003e287kb/352kb\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eEmber\u003c/td\u003e\n\u003ctd\u003e433kb\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eAngular 2\u003c/td\u003e\n\u003ctd\u003e623kb/1023kb\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e 大部分小应用场景下，我们不需要任何框架来开发前端组件，体积，效率，自由度各方面都有影响。了解基础的js知识 + 各框架基本原理，可以给我们的应用带来意想不到的时间和空间上的收获。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"写在最后\"\u003e写在最后\u003c/h2\u003e\n\n\u003cp\u003e推荐使用typora作为markdown的主要编辑工具，可以给你带来更简单的输入体验。\u003c/p\u003e\n","link":"http://nanxi.li","location":"项目/mdrest","picture":"/项目/mdrest_img/cover.jpg","tags":["golang","markdown"],"title":"MdRest 关于Markdown博客，你所期望的都在这里"}