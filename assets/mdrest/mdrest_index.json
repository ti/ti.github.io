[{"catalog":"about","date":"2022-09-05T09:52:49.144709835+08:00","location":"关于/我","summary":"本博客，也是MdRest的引擎创建，你也可以将它当作mdrest示例。 关于我 github: https://github.com/ti","title":"又一个程序员的一亩三分地","truncated":false},{"date":"2022-09-05T09:52:49.10207166+08:00","location":"README","summary":"采用 MdRest 引擎编写, 编辑文章到 master 分支，十分钟就会被更新一次。 How to build cd build ./publish.sh","title":"个人博客","truncated":false},{"date":"2022-06-01T00:00:00Z","location":"开发/apaas/低码(aPaaS)，高度抽象的现代应用架构","picture":"/开发/apaas/image/低码(aPaaS)，高度抽象的现代应用架构/apaas.png","summary":"国内SaaS产业长期落后，近几年由于移动办公的兴起和人口红利的增长放缓，这个传统产业又重新回到了国内资本的视野，aPaaS，iPaaS，iDaaS、低码，无码等","tags":["aPaaS","低码","Serverless"],"title":"低码(aPaaS)，高度抽象的现代应用架构","truncated":true},{"date":"2022-02-23T00:00:00Z","location":"开发/禁止网站打开新的Tab页","picture":"/开发/image/tabs_thum.png","summary":"当我们浏览网页一段时间后，你一定见过下面的场景, 浏览器会产生大量的Tab页，当我们会后再找自己的历史内容时，往往会迷失其中。 tab 这个问题的主要原因是，很多开发者滥","tags":["妙招","网页"],"title":"[生活小妙招] 禁止网站打开新的Tab页","truncated":true},{"date":"2019-03-05T00:00:00Z","location":"开发/Markdown模板","picture":"/开发/image/dropbox_geoblast.jpg","summary":"Markdown 在我们应用日常使用中基本上已经替代其他文本工具了, 但是和其他文本编辑器不同的是, 没有太多新建项目模板, 前几天看到Dropbox Paper上 面的几个 Markdown 模板,做的","tags":["Markdown","模板"],"title":"分享几个常用的 Markdown 模板","truncated":true},{"date":"2018-09-26T00:00:00Z","location":"开发/faas/faas","picture":"/开发/faas/assets/cover.jpg","summary":"自从K8S之后，各类*aaS的架构设计层出不穷，相信后端的小伙伴已经对各种架构耳熟能详，但是如果说有一个应用，真正让“Serverless（无服务架构）”得到大","tags":["架构","小程序"],"title":"从小程序•云开发谈谈Serverless架构在互联网公司的落地设计","truncated":true},{"date":"2018-08-08T00:00:00Z","location":"开发/go/在Go语言中，你已经不需要任何框架","summary":"经常有做Java的同事问我，说是习惯了 Java的 Spring Cloud生态， 在Go语言下，有没有这种大一统的开发框架呢，答案是肯定的。 得益于Go语言的简单自由， Go语言的","tags":["go","框架"],"title":"在Go语言中，你已经不需要任何框架","truncated":true},{"author":"Cyeam","author_avatar":"https://blog.cyeam.com/assets/images/logo.jpg","author_link":"http://blog.cyeam.com/golang/2017/02/08/go-optimize-slice-pool","date":"2018-04-18T00:00:00Z","location":"开发/go/Golang优化之路——临时对象池","summary":"带垃圾回收的语言，虽然对于刚刚上手的程序员是友好的，但是后期随着项目变得越来越巨大，维护的内存问题也会逐渐暴露出来。今天讲一种优化内存申请的方法——临时对象池。","tags":["go","代码调优"],"title":"Golang优化之路——临时对象池","truncated":true},{"author":"Cyeam","author_link":"https://rakyll.org/go-tool-flags/","date":"2018-04-16T00:00:00Z","location":"开发/go/关于Go tools的比较有用的flags","summary":"你刚接触Go tools吗？或者你想扩展下你的知识面？这篇文章是关于Go tools的flags，这些flags每个人都应该知道。 免责声明：这篇文件可能有一些偏见。","tags":["go","代码调优"],"title":"【译】关于Go tools的比较有用的flags","truncated":true},{"date":"2018-01-30T00:00:00Z","location":"开发/grpc/错误处理","picture":"/开发/grpc/img/grpc_error.png","summary":"网址： https://github.com/googleapis/googleapis/tree/master/google/rpc Google 错误定义适用于大多数互联网公司的错误处理， Google 的错误处理简而言有如下处理： 如果请求返回成功，则HTTP状态码：200， 并返回请求实体 如果请求失败：则返回","tags":["grpc","proto"],"title":"GRPC通用错误码和错误详情详解","truncated":true},{"date":"2017-12-02T00:00:00Z","location":"开发/k8s/kubernetes","picture":"/开发/k8s/img/cover.jpg","summary":"Kubernetes是一个开源系统，它可以被用于自动部署，扩展和管理容器化应用程序，提供跨主机集群的自动部署、扩展以及运行应用程序容器的平台。这篇文章洋洋洒洒地","tags":["k8s","容器"],"title":"Kubernetes 生态实践","truncated":true},{"catalog":"projects","date":"2017-05-05T00:00:00Z","github":"https://github.com/ti/mdb","link":"https://github.com/ti/mdb","location":"项目/mdb","picture":"/项目/img/mongodb.jpg","summary":"Golang 一直缺失官方的Mongodb库， 对于Go开发者，普遍采用mgo库作为go语言的mongodb驱动库，如果你使用过，你可能在每次查询数据库时习惯了以下的用法： copy","tags":["mongodb","mgo","go"],"title":"mdb,一个以db为单位，带重连机制的mgo封装","truncated":true},{"date":"2017-05-02T00:00:00Z","location":"开发/IoT/coap/COAP 应用详解","picture":"/开发/IoT/coap/iot.png","summary":"CoAP是一种应用层协议，它运行于UDP协议之上而不是像HTTP那样运行于TCP之上。 COAP 相当于 HTTP Restful 就比如， arm 相当于 x86 COAP 应用层解释 coap请求代码示例 coapClient, err := coap.Dial(\u0026quot;myhourse.local:5683\u0026quot;) req :=","tags":["MQ"],"title":"COAP 应用详解","truncated":true},{"date":"2017-04-02T00:00:00Z","location":"开发/nsq/NSQ入门指南","picture":"/开发/nsq/img/cover.png","summary":"NSQ是实时的分布式消息处理平台，用于大规模系统中的实时消息服务，并且每天能够处理数亿级别的消息，其设计目标是为在分布式环境下运行的去中心化服务提供一个强大的基","tags":["MQ"],"title":"NSQ 快速入门和性能测试","truncated":true},{"catalog":"projects","date":"2017-03-04T00:00:00Z","github":"https://github.com/ti/mdrest","link":"http://nanxi.li","location":"项目/mdrest","picture":"/项目/mdrest_img/cover.jpg","summary":"从Markdown建站，几乎成了整个技术圈博客标配，但是Markdown的技术存在很多限制，搜索下目前Markdown博客引擎你会发现，所有的博客引擎定制化不是","tags":["golang","markdown"],"title":"MdRest 关于Markdown博客，你所期望的都在这里","truncated":true},{"author":"思晴","date":"2017-03-01T00:00:00Z","location":"设计/不存在的“白”","picture":"/设计/img/art-1851483_1280.jpg","summary":"1.“‘白’这样的东西是不存在的。” 漂白的骨头让我们与死亡相连，但奶和蛋的白，又对我们述说着生命，衣服的白，又让我们感觉到了温暖与舒适。母乳的哺育对所有的哺乳动","tags":["设计"],"title":"不存在的“白”","truncated":true},{"author":"Deepzz","author_link":"https://deepzz.com","date":"2017-02-27T00:00:00Z","location":"开发/Golang context简单示例","summary":"对于 Golang 开发者来说 context （上下文）包一定不会陌生。但很多时候，我们懒惰的只是见过它，或能起到什么作用，并不会去深究它。 应用场景：在 Go http 包的 Server 中，每一个请求在都有一个对","tags":["go","context"],"title":"Golang context 包，简单示例","truncated":true},{"author":"思晴","date":"2017-02-21T00:00:00Z","location":"设计/读懂《设计的觉醒》","picture":"/设计/img/无印良品.png","summary":"《设计的觉醒》作者田中一光用平实的语言向我们娓娓道说了他这一生设计思考的觉醒过程。 田中一光， 是日本著名的设计师，是平面设计领域的教父级人物， 在书中我们可以详尽的","tags":["设计","日本"],"title":"读懂《设计的觉醒》","truncated":true},{"date":"2016-12-01T00:00:00Z","location":"开发/跨语言对话 (python \u0026 go)","picture":"/开发/img/covers/gears.jpg","summary":"因为go可以调用c，python 可以调用c，所以 go 也可以调用 python 编译过程（编译语言） python 等解释性语言执行过程(php,nodejs, chrome javascript) chrome js 动态库和静态库(系统级支","tags":["编译","跨平台"],"title":"跨语言对话 (python \u0026 go)","truncated":true},{"catalog":"projects","date":"2016-09-04T00:00:00Z","github":"https://github.com/ti/ctxrouter","link":"https://github.com/ti/ctxrouter","location":"项目/context_router","picture":"/项目/img/ferrari.jpg","summary":"GitHub: https://github.com/ti/ctxrouter Features Context Append on Current Function Best Performance (no regexp match) Wildcards Router Support (PathPrefix) Decode request body before business layer (JSON, xml or other) Decode request url before business layer Zero Garbage Examples Basic Example package main import ( \u0026quot;github.com/ti/ctxrouter\u0026quot; \u0026quot;net/http\u0026quot; \u0026quot;strconv\u0026quot; ) //context style func (ctx *Context) Hello(id string) { //ctx.Request ... ctx.Writer.Write([]byte(\u0026quot;hello \u0026quot; + id)) } //normal style func NormalHello(w http.ResponseWriter, r *http.Request) { w.Write([]byte(\u0026quot;hello \u0026quot; + ctxrouter.Params(r)[0])) } //func style func Hello(ctx *ctxrouter.Context, name","tags":["golang","router"],"title":"CtxRouter A High performance HTTP request router with Context","truncated":true},{"date":"2016-07-27T00:00:00Z","location":"开发/SOA架构和微服务架构有什么区别？","picture":"/开发/img/covers/battle.jpg","summary":"相信大家在阅读这篇文章之前都对两个架构有所了解，首先让大家看张图来理解各自对区别。 使用SOA架构和微服务构建对购物应用 接下来理解起来就更佳容易。 各自概念 SOA 架构 S","tags":["微服务","架构","SOA"],"title":"SOA架构和微服务架构有什么区别？","truncated":true},{"catalog":"projects","date":"2016-02-04T00:00:00Z","github":"https://github.com/ti/nasync","link":"https://github.com/ti/nasync","location":"项目/nasync","picture":"/项目/img/number.jpg","summary":"a customizable async task pool for golang, (event bus, runtime) github: https://github.com/ti/nasync Fetures less memory more effective max gorutines and memory customizable more safe Simple Usage nasync.Do(function) Advanced Usage go get github.com/ti/nasync import \u0026quot;github.com/ti/nasync\u0026quot; func main() { //new a async pool in max 1000 task in max 1000 gorutines async := nasync.New(1000,1000) defer async.Close() async.Do(doSometing,\u0026quot;hello word\u0026quot;) nasync.Do(func() { http.Get(\u0026quot;https://github.com/ti/\u0026quot;) }) } func doSometing(msg string) string{ return \u0026quot;i am done by \u0026quot; + msg } WHY golang is something easy but","tags":["golang"],"title":"NASYNC 可自定义容量的异步库","truncated":true},{"date":"2016-02-01T00:00:00Z","location":"开发/弹性伸缩部署","summary":"本文转载和补充目前弹性伸缩架构模型，旨在让初学同学们更佳清晰地认识弹性伸缩。 从业务生命周期而言，正处上升期的应用，访问量可能每月甚至每周成指数倍数地增长，当你在","title":"弹性伸缩部署","truncated":true},{"author":"Winwill","author_url":"http://qifuguang.me/","date":"2015-01-28T00:00:00Z","location":"开发/Redis事务介绍","picture":"/开发/img/covers/juery.jpg","summary":"写在前面：一般情况下，我们不建议将数据可用性内容放在redis中进行操作，例如转账，关系建立等，redis被认为是一个较不可靠的数据库，一般用作数据缓存，pub","tags":["redis"],"title":"Redis事务介绍","truncated":true},{"date":"2014-02-01T00:00:00Z","location":"开发/12factor_十二因子應用程式","picture":"/开发/img/covers/fractal.jpg","summary":"The 12 Factor App “十二因子应用程式”源自于Heroku开发团队在收集及观察大量的SaaS(Software as a Service)应用程式开发与执行过程之后，所整理出来的十","tags":["程序","12因子"],"title":"十二因子应用程式","truncated":true},{"author":"初一七月","date":"2013-01-28T00:00:00Z","location":"开发/Redis高并发问题","summary":"Redis为单进程单线程模式，采用队列模式将并发访问变为串行访问。Redis本身没有锁的概念，Redis对于多个客户端连接并不存在竞争，但是在Jedis客户端对","tags":["redis"],"title":"Redis并发问题","truncated":true},{"author":"张洋","author_link":"http://blog.codinglabs.org/articles/theory-of-mysql-index.html","date":"2011-10-18T00:00:00Z","location":"开发/MySQL索引背后的数据结构及算法原理","picture":"/开发/img/mysql.jpg","summary":"MySQL索引背后的数据结构及算法原理 本文以MySQL数据库为研究对象，讨论与数据库索引相关的一些话题。特别需要说明的是，MySQL支持诸多存储引擎，而各种存储","tags":["mysql","算法"],"title":"MySQL索引背后的数据结构及算法原理","truncated":true}]